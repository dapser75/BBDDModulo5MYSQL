-- MySQL Script generated by MySQL Workbench
-- Wed Jan 27 10:28:52 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema youtube
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `youtube` ;

-- -----------------------------------------------------
-- Schema youtube
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `youtube` DEFAULT CHARACTER SET utf8 ;
USE `youtube` ;

-- -----------------------------------------------------
-- Table `youtube`.`tb_pais`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`tb_pais` ;

CREATE TABLE IF NOT EXISTS `youtube`.`tb_pais` (
  `idtb_pais` INT NOT NULL AUTO_INCREMENT,
  `pais` VARCHAR(45) NULL,
  `iso_pais2` VARCHAR(2) NULL,
  `iso_pais3` VARCHAR(3) NULL,
  PRIMARY KEY (`idtb_pais`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`tb_provincia`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`tb_provincia` ;

CREATE TABLE IF NOT EXISTS `youtube`.`tb_provincia` (
  `idtb_provincia` INT NOT NULL AUTO_INCREMENT,
  `codprovincia` VARCHAR(5) NULL,
  `nomprovincia` VARCHAR(45) NULL,
  `pais` INT NULL,
  PRIMARY KEY (`idtb_provincia`),
  INDEX `fk_provincia_pais_id_idx` (`pais` ASC) VISIBLE,
  CONSTRAINT `fk_provincia_pais_id`
    FOREIGN KEY (`pais`)
    REFERENCES `youtube`.`tb_pais` (`idtb_pais`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`tb_codigopostal`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`tb_codigopostal` ;

CREATE TABLE IF NOT EXISTS `youtube`.`tb_codigopostal` (
  `idtb_codigopostal` INT NOT NULL AUTO_INCREMENT,
  `codigopostal` VARCHAR(45) NULL,
  `poblacion` VARCHAR(45) NULL,
  `idprovincia` INT NULL,
  `idpais` INT NULL,
  PRIMARY KEY (`idtb_codigopostal`),
  INDEX `fk_codpostal_pais_id_idx` (`idpais` ASC) VISIBLE,
  INDEX `fk_codpostal_provincia_id_idx` (`idprovincia` ASC) VISIBLE,
  CONSTRAINT `fk_codpostal_pais_id`
    FOREIGN KEY (`idpais`)
    REFERENCES `youtube`.`tb_pais` (`idtb_pais`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_codpostal_provincia_id`
    FOREIGN KEY (`idprovincia`)
    REFERENCES `youtube`.`tb_provincia` (`idtb_provincia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`tb_usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`tb_usuario` ;

CREATE TABLE IF NOT EXISTS `youtube`.`tb_usuario` (
  `id_usuario` INT NOT NULL AUTO_INCREMENT,
  `nombreapellidos` VARCHAR(150) NULL,
  `nombreusuario` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `fechanacimiento` DATE NULL,
  `sexo` TINYINT(1) NULL,
  `password` VARCHAR(45) NULL,
  `idpais` INT NULL,
  `idcodigopostal` INT NULL,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  PRIMARY KEY (`id_usuario`),
  INDEX `fk_usuario_codpostal_id_idx` (`idcodigopostal` ASC) VISIBLE,
  INDEX `fk_usuario_pais_id_idx` (`idpais` ASC) VISIBLE,
  CONSTRAINT `fk_usuario_codpostal_id`
    FOREIGN KEY (`idcodigopostal`)
    REFERENCES `youtube`.`tb_codigopostal` (`idtb_codigopostal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuario_pais_id`
    FOREIGN KEY (`idpais`)
    REFERENCES `youtube`.`tb_pais` (`idtb_pais`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`tb_estadosvideo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`tb_estadosvideo` ;

CREATE TABLE IF NOT EXISTS `youtube`.`tb_estadosvideo` (
  `id_estadosvideo` INT(2) NOT NULL AUTO_INCREMENT,
  `estado` VARCHAR(45) NULL,
  PRIMARY KEY (`id_estadosvideo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`tb_videos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`tb_videos` ;

CREATE TABLE IF NOT EXISTS `youtube`.`tb_videos` (
  `id_video` INT NOT NULL AUTO_INCREMENT,
  `titulo` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(250) NOT NULL,
  `tamano` INT NULL,
  `archivo` VARCHAR(150) NULL,
  `duracion` TIME NULL,
  `thumbnail` BLOB NULL,
  `reproducciones` INT NULL,
  `estadosvideo_id` INT NULL DEFAULT 03,
  PRIMARY KEY (`id_video`),
  INDEX `estadosvideo_idx_idx` (`estadosvideo_id` ASC) VISIBLE,
  CONSTRAINT `fk_estadosvideo_id`
    FOREIGN KEY (`estadosvideo_id`)
    REFERENCES `youtube`.`tb_estadosvideo` (`id_estadosvideo`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`tb_videospublicados`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`tb_videospublicados` ;

CREATE TABLE IF NOT EXISTS `youtube`.`tb_videospublicados` (
  `usuario_id` INT NOT NULL,
  `video_id` INT NOT NULL,
  `fecha` TIMESTAMP NULL,
  PRIMARY KEY (`video_id`, `usuario_id`),
  INDEX `video_idx_idx` (`video_id` ASC) VISIBLE,
  CONSTRAINT `fk_videospub_usuario_id`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `youtube`.`tb_usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_videospub_video_id`
    FOREIGN KEY (`video_id`)
    REFERENCES `youtube`.`tb_videos` (`id_video`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`tb_etiquetas_video`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`tb_etiquetas_video` ;

CREATE TABLE IF NOT EXISTS `youtube`.`tb_etiquetas_video` (
  `id_etiquetas_video` INT NOT NULL AUTO_INCREMENT,
  `nombreetiqueta` VARCHAR(45) NOT NULL DEFAULT 'Video',
  PRIMARY KEY (`id_etiquetas_video`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`tb_videosyetiquetas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`tb_videosyetiquetas` ;

CREATE TABLE IF NOT EXISTS `youtube`.`tb_videosyetiquetas` (
  `video_id` INT NOT NULL,
  `etiquetas_video_id` INT NOT NULL,
  PRIMARY KEY (`video_id`, `etiquetas_video_id`),
  INDEX `etiquetas_video_idx_idx` (`etiquetas_video_id` ASC) VISIBLE,
  CONSTRAINT `fk_vidyeti_video_id`
    FOREIGN KEY (`video_id`)
    REFERENCES `youtube`.`tb_videos` (`id_video`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_vidyeti_etiquetas_video_id`
    FOREIGN KEY (`etiquetas_video_id`)
    REFERENCES `youtube`.`tb_etiquetas_video` (`id_etiquetas_video`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`tb_canal`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`tb_canal` ;

CREATE TABLE IF NOT EXISTS `youtube`.`tb_canal` (
  `id_canal` INT NOT NULL AUTO_INCREMENT,
  `usuario_id` INT NULL,
  `nombre_canal` VARCHAR(45) NULL,
  `descripcion_canal` VARCHAR(250) NULL,
  `fecha_creacion` DATETIME NULL,
  PRIMARY KEY (`id_canal`),
  INDEX `usuario_idx_idx` (`usuario_id` ASC) VISIBLE,
  CONSTRAINT `fk_canal_usuario_id`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `youtube`.`tb_usuario` (`id_usuario`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`tb_subscripcioncanal`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`tb_subscripcioncanal` ;

CREATE TABLE IF NOT EXISTS `youtube`.`tb_subscripcioncanal` (
  `canal_id` INT NOT NULL,
  `usuario_id` INT NOT NULL,
  PRIMARY KEY (`canal_id`, `usuario_id`),
  INDEX `usuario_idx_idx` (`usuario_id` ASC) VISIBLE,
  CONSTRAINT `fk_subscripcion_canal_id`
    FOREIGN KEY (`canal_id`)
    REFERENCES `youtube`.`tb_canal` (`id_canal`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_subscripcion_usuario_id`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `youtube`.`tb_usuario` (`id_usuario`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`tb_like_dislike`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`tb_like_dislike` ;

CREATE TABLE IF NOT EXISTS `youtube`.`tb_like_dislike` (
  `id_like_dislike` TINYINT NOT NULL,
  `descripcion` VARCHAR(45) NULL,
  PRIMARY KEY (`id_like_dislike`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`tb_resgistrolikevideos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`tb_resgistrolikevideos` ;

CREATE TABLE IF NOT EXISTS `youtube`.`tb_resgistrolikevideos` (
  `video_id` INT NOT NULL,
  `usuario_id` INT NOT NULL,
  `like_dislike_id` TINYINT NULL,
  `fecha` DATETIME NULL,
  INDEX `like_dislike_idx_idx` (`like_dislike_id` ASC) VISIBLE,
  PRIMARY KEY (`usuario_id`, `video_id`),
  INDEX `fk_video_id_idx` (`video_id` ASC) VISIBLE,
  CONSTRAINT `fk_registro_like_dislike_id`
    FOREIGN KEY (`like_dislike_id`)
    REFERENCES `youtube`.`tb_like_dislike` (`id_like_dislike`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_registro_video_id`
    FOREIGN KEY (`video_id`)
    REFERENCES `youtube`.`tb_videos` (`id_video`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_registro_usuario_id`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `youtube`.`tb_usuario` (`id_usuario`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`tb_comentariovideo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`tb_comentariovideo` ;

CREATE TABLE IF NOT EXISTS `youtube`.`tb_comentariovideo` (
  `id_comentariovideo` INT NOT NULL AUTO_INCREMENT,
  `usuario_id` INT NULL,
  `video_id` INT NULL,
  `comentario` VARCHAR(400) NULL,
  `fecha` DATETIME NULL,
  PRIMARY KEY (`id_comentariovideo`),
  INDEX `usuario_idx_idx` (`usuario_id` ASC) VISIBLE,
  INDEX `video_idx_idx` (`video_id` ASC) VISIBLE,
  CONSTRAINT `fk_comentario_usuario_id`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `youtube`.`tb_usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comentrario_video_id`
    FOREIGN KEY (`video_id`)
    REFERENCES `youtube`.`tb_videos` (`id_video`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`tb_likescomentarios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`tb_likescomentarios` ;

CREATE TABLE IF NOT EXISTS `youtube`.`tb_likescomentarios` (
  `comentariovideo_id` INT NOT NULL,
  `usuario_id` INT NOT NULL,
  `like_dislike_id` TINYINT NULL,
  `fecha` DATETIME NULL DEFAULT now(),
  PRIMARY KEY (`comentariovideo_id`, `usuario_id`),
  INDEX `like_dislike_idx_idx` (`like_dislike_id` ASC) VISIBLE,
  INDEX `fk_lc_usuario_id_idx` (`usuario_id` ASC) VISIBLE,
  CONSTRAINT `fk_lc_like_dislike_id`
    FOREIGN KEY (`like_dislike_id`)
    REFERENCES `youtube`.`tb_like_dislike` (`id_like_dislike`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_lc_comentariovideo_id`
    FOREIGN KEY (`comentariovideo_id`)
    REFERENCES `youtube`.`tb_comentariovideo` (`id_comentariovideo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_lc_usuario_id`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `youtube`.`tb_usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`tb_playliststatus`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`tb_playliststatus` ;

CREATE TABLE IF NOT EXISTS `youtube`.`tb_playliststatus` (
  `id_playliststatus` TINYINT NOT NULL,
  `status` VARCHAR(45) NULL,
  PRIMARY KEY (`id_playliststatus`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`tb_playlist`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`tb_playlist` ;

CREATE TABLE IF NOT EXISTS `youtube`.`tb_playlist` (
  `id_playlist` INT NOT NULL AUTO_INCREMENT,
  `usuario_id` INT NULL,
  `playlistname` VARCHAR(45) NULL,
  `playlistdate` DATE NULL,
  `playliststatus_id` TINYINT NULL,
  PRIMARY KEY (`id_playlist`),
  INDEX `fk_usuario_idx_idx` (`usuario_id` ASC) VISIBLE,
  INDEX `fk_playliststatus_idx` (`playliststatus_id` ASC) VISIBLE,
  CONSTRAINT `fk_playlist_usuario_id`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `youtube`.`tb_usuario` (`id_usuario`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_playlist_playliststatus_id`
    FOREIGN KEY (`playliststatus_id`)
    REFERENCES `youtube`.`tb_playliststatus` (`id_playliststatus`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`tb_videosplaylist`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`tb_videosplaylist` ;

CREATE TABLE IF NOT EXISTS `youtube`.`tb_videosplaylist` (
  `playlist_id` INT NOT NULL,
  `video_id` INT NOT NULL,
  PRIMARY KEY (`playlist_id`, `video_id`),
  INDEX `fk_video_id_idx` (`video_id` ASC) VISIBLE,
  CONSTRAINT `fk_videos_playlist_id`
    FOREIGN KEY (`playlist_id`)
    REFERENCES `youtube`.`tb_playlist` (`id_playlist`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_videos_video_id`
    FOREIGN KEY (`video_id`)
    REFERENCES `youtube`.`tb_videos` (`id_video`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
